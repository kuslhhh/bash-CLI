export declare type Cache<TParams = any, TValue = any, TKey = any> = {
    has: (key: TParams) => boolean;
    clear: () => void;
    clone: () => Cache<TParams, TValue, TKey>;
    set: (params: TParams, value?: TValue) => void;
    get: (params: TParams) => TValue;
    delete: (params: TParams) => void;
    keys: () => TParams[];
};
export declare const createCache: <TParams = any, TValue = any, TKey = any>(options?: {
    values?: Map<any, any> | undefined;
    mapKey?: ((params: TParams) => TKey) | undefined;
    keys?: Map<TParams, any> | undefined;
} | undefined) => Cache<TParams, TValue, TKey>;
